---
# tasks file for dnsmasq
- name: Prepare Config Directories
  ansible.builtin.file:
    path: "{{ dnsmasq_instance.config_dir }}"
    owner: "{{ dnsmasq_instance.config_dir_owner | default(omit) }}"
    group: "{{ dnsmasq_instance.config_dir_group | default(omit) }}"
    mode: "{{ dnsmasq_instance.config_dir_mode | default(omit) }}"
    state: directory
  loop: "{{ dnsmasq_instances | dict2items }}"
  loop_control:
    label: "{{ instance_id }}"
  vars:
    instance_id: "{{ item.key }}"
    dnsmasq_instance: "{{ item.value }}"
    config_dir: "{{ dnsmasq_instance.config_dir }}"
    

- name: Template Instance Global Config
  ansible.builtin.template:
    src: 'dnsmasq.conf.j2'
    dest: "{{ config_dir }}/dnsmasq.conf"
    owner: "{{ dnsmasq_instance.config_file_owner | default(omit) }}"
    group: "{{  dnsmasq_instance.config_file_group | default(omit) }}"
    mode: "{{  dnsmasq_instance.config_file_mode | default(omit) }}"
    backup: "{{ dnsmasq_backup_config }}"
  loop: "{{ dnsmasq_instances | dict2items }}"
  loop_control:
    label: "{{ instance_id }}"
  register: dnsmasq_config_template_result
  vars:
    instance_id: "{{ item.key }}"
    dnsmasq_instance: "{{ item.value }}"
    config_dir: "{{ dnsmasq_instance.config_dir }}"
    config: "{{ dnsmasq_instance.config }}"
  when: 
    - config.global_options is defined
  notify: restart_dnsmasq